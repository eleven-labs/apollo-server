type Query {
  ranks: [Rank]
  
  astronaut(id: ID!): Astronaut
  astronauts(skip: Int, first: Int): [Astronaut]
  astronautConnection(first: Int, after: String, last: Int, before: String): AstronautConnection! @authenticated
  
  planet(id: ID!): Planet
  planets: [Planet]
}

type Mutation {
  createAstronaut(input: AstronautInput!): Astronaut
  astronaut(id: ID!): AstronautOps
  planet(id: ID!): PlanetOps

  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type Subscription {
  astronautAdded: Astronaut @authenticated
}